2. Forstå algoritmer og utføre “benchmark”-tester på koden
------------------------------------------------------------------------------------------------------------------------------------
Oppgave A) 

https://github.com/Genijarl/Team-Vestfold-og-Farsund/blob/master/Oblig1/sorting.go

------------------------------------------------------------------------------------------------------------------------------------
Oppgave B)
https://github.com/Genijarl/Team-Vestfold-og-Farsund/blob/master/Oblig1/sorting_test.go

------------------------------------------------------------------------------------------------------------------------------------
Oppgave C)

Benchmark						ns/op
BenchmarkBSortModified100-4               100000	22545
BenchmarkBSortModified1000-4                1000	1489716
BenchmarkBSortModified10000-4                 10	212672260
BenchmarkBSort100-4                       100000	19470
BenchmarkBSort1000-4                        1000	1439749
BenchmarkBSort10000-4                         10        213916890
BenchmarkQSort100-4                       500000	4858
BenchmarkQSort1000-4                       30000	59841
BenchmarkQSort10000-4                       1000	1791985

Grafisk presentasjon i README.md fil
https://github.com/Genijarl/Team-Vestfold-og-Farsund/blob/master/README.md

BSortModified 100-4 brukte lengre tid enn eksempeloppgaven BSort 100-4. Qsort 100-4 gikk fortest av de 3.
BSortModified 1000-4 var såvidt tregere enn Bsort 1000-4. Qsort 1000-4 var også her den kjappeste operasjonen.
BsortModified 10000-4 var kjappere enn Bsort 10000-4 og Qsort10000-4 var kjappest.

Big-O:
Forstår det slik fra grafen i http://bigocheatsheet.com/ at
QuickSort algorytmen kan håndtere fler operasjoner over flere elementer enn Bubblesort og Bubblesort modified. Dette ser vi ved at
bubblesort har et gjennomsnitt på Θ(n^2), mens quicksort har et gjennomsnitt på Θ(n log(n)). Θ(n^2) utfører mange fler opereasjoner 
og behandler mange færre elementer enn Θ(n log(n)).
